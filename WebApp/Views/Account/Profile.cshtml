@model WebApp.ViewModels.ProfileViewModel

@{
    ViewData["Title"] = "Profile";
    var isAdmin = ViewBag.IsAdmin as bool? ?? false;
}

<h2>@(isAdmin ? "Administrator Profile" : "User Profile")</h2>

<div class="alert alert-success d-none" id="successMessage">Profile updated successfully!</div>
<div class="alert alert-danger d-none" id="errorMessage">Something went wrong. Please try again.</div>

<form id="profileForm">
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Surname"></label>
        <input asp-for="Surname" class="form-control" />
        <span asp-validation-for="Surname" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Phone"></label>
        <input asp-for="Phone" class="form-control" />
        <span asp-validation-for="Phone" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary" id="saveButton">Save Changes</button>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.getElementById("profileForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const saveBtn = document.getElementById("saveButton");
            saveBtn.disabled = true;

            const formData = {
                name: document.getElementById("Name").value,
                surname: document.getElementById("Surname").value,
                email: document.getElementById("Email").value,
                phone: document.getElementById("Phone").value
            };

            try {
                const response = await fetch('@Url.Action("UpdateProfile", "Account")', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(formData)
                });

                if(response.ok) {
                    const result = await response.json();

                    if (result.success) {
                        document.getElementById("successMessage").classList.remove("d-none");
                        document.getElementById("errorMessage").classList.add("d-none");
                    } else {
                        document.getElementById("successMessage").classList.add("d-none");
                        document.getElementById("errorMessage").classList.remove("d-none");
                    }
                } else {
                    throw new Error("Server returned an error");
                }

            } catch (error) {
                console.error("Error updating profile:", error);
                document.getElementById("successMessage").classList.add("d-none");
                document.getElementById("errorMessage").classList.remove("d-none");
            } finally {
                saveBtn.disabled = false;
            }
        });
    </script>
}